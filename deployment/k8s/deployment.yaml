apiVersion: apps/v1
kind: Deployment
metadata:
  name: s3-connector
  namespace: openmetadata
  labels:
    app: s3-connector
    component: ingestion
    version: v0.9
spec:
  replicas: 1
  selector:
    matchLabels:
      app: s3-connector
  template:
    metadata:
      labels:
        app: s3-connector
        component: ingestion
        version: v0.9
      annotations:
        prometheus.io/scrape: "false"  # Set to true if you have metrics endpoint
    spec:
      serviceAccountName: s3-connector-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: s3-connector
        image: your-registry/s3-connector:v0.9  # Replace with your image
        imagePullPolicy: Always
        
        # Resource management
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        
        # Environment variables from secrets and configmaps
        env:
        - name: OPENMETADATA_SERVER_URL
          valueFrom:
            secretKeyRef:
              name: s3-connector-secrets
              key: openmetadata-server-url
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: s3-connector-secrets
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: s3-connector-secrets
              key: aws-secret-access-key
        - name: BUCKET_NAME
          valueFrom:
            secretKeyRef:
              name: s3-connector-secrets
              key: bucket-name
        - name: PYTHONPATH
          value: "/app/src:${PYTHONPATH}"
        - name: CONNECTOR_TYPE
          value: "s3"
        
        # Health checks
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import om_s3_connector; print('OK')"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import om_s3_connector; print('OK')"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Volume mounts
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        # Command override for one-time ingestion
        command: ["metadata"]
        args: ["ingest", "-c", "/app/config/ingestion-config.yaml"]
      
      # Volumes
      volumes:
      - name: config-volume
        configMap:
          name: s3-connector-config
      - name: tmp-volume
        emptyDir: {}
      
      # Pod scheduling
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - s3-connector
              topologyKey: kubernetes.io/hostname
      
      # Restart policy
      restartPolicy: Always
      
      # Grace period for shutdown
      terminationGracePeriodSeconds: 30
